@startuml DesignClassModel

    Title Design Class Model

    class Player {
        -health : int
        -ArrayIndexCount : int
        -WeightCount : int
        -hidden : boolean
        -inventory : Item[]
        -notesInventory : Note[]
        -notesCount : int
        -currentuDirection : Direction

        +Player()
        +decreaseHealth()
        +increaseHealth()
        +getHealth()
        +setHealth()
        +getInventory()
        +insertItem()
        +removeItem()
        +getInventory()
        +setInventory()
        +getItem()
        +getInventoryCount()
        +setInventoryCount()
        +getInventoryWeight()
        +setInventoryWeight()
        +getNotesInventory()
        +setNotesInventory()
        +getNotesCount()
        +setNotesCount()
        +getNoteAt()
        +printInventory()
        +crossDoor()
        +changeDirection()
        +getCurrentDirection()
        +setCurrentDirection()
        +isHidden()
        +setHidden()
        +equals()
        +clone()
        -compactedInventory()
    }

    class GameMemento{
        -player : Player
        -wall : Wall
        -enemy : Enemy
        -isGameOn : boolean
        -count : int
        -filledStarHoles : int
        -starHols : boolean[]

        +GameMemento()
        +getPlayer()
        +getWall()
        +getEnemy()
        +getisGameOn()
        +getCount()
        +getFilledStarHoles()
        +getStarHoles()
    }

    class GameCaretaker{
        -mementos : Stack

        +GameCaretaker()
        +addMemento()
        +getMemento()
        +size()
    }

    enum Gender {
        MALE
        FEMALE
        NEUTRAL
    }

    enum Direction {
        NORTH
        SOUTH
        EAST
        WEST
    }

    enum LockType {
        KEY
        COMBINATION
        NONE
    }

    class Enemy{
        +move()
        +Enemy()
        +equals()
        +clone()
        -generateStartingPoint()
    }

    class GameFrame {
        -game : GameManager
        -wallcount : int
        -images : Image[]
        -isFullscreen : boolean
        -gd : GraphicsDevice
        -frame : JFrame
        -terminal : JTextPane
        -inventoryText : JTextArea
        -miniMapIcon : ImageIcon
        -minimapImage : Image
        -miniMap : JLabel
        -terminalScrollPane : JScrollPane
        -inputField : JTextField
        -playerPositionLabel : JLabel
        -playerHealthLabel : JLabel
        -statusPanel : JPanel
        -filledStarsLabel : JLabel
        -wallConfigured : boolean
        -dimension : int
        -height : int

        +GameFrame()
        -updatePlayerHealthLabel()
        -updateStarLabel()
        -updatePlayerPositionLabel()
        -updateInventoryText()
        -toggleFullscreen()
        -zoom()
        -unzoom()
        -writeToTerminal()
        -clearTerminal()
    }

    class Game {
        -player : Player
        -map : Map
        -enemy : Enemy
        -enemycount: int
        -enemyAttacks : boolean
        -count : int
        -isGameOn : boolean
        -caretaker : GameCaretaker
        -filledStarHoles : int
        -starHoles : boolean[]
        
        +Game()
        +nextMove()
        +isGameOn()
        +setGameOn()
        +getPlayer()
        +setPlayer()
        +getMap()
        +setMap()
        +getEnemy()
        +setEnemy()
        +getEnemyCount()
        +setEnemyCount()
        +getEnemyAttacks()
        +setEnemyAttacks()
        +getCount()
        +setCount()
        +getFilledStarHoles()
        +setFilledStarHoles()
        +getStarHoles()
        +setStarHoles()
        +getStarHole()
        +undo()
        +checkGameOver()
        +checkWin()
        +checkLost()
        +returnItemsInWall()
        +saveCurrentState()
        -playerTurn()
        -enemyTurn()
        -capitalizeFirstLetter()
        -printLook()
        -printStatus()
    }

    class Main {
        +main()
    }

    class Item{
        #name : String
        #weight : int
        #pickable : boolean
        #usingMessage : String

        +Item()
        +getWeight()
        +isPickable()
        +getName()
        +getUsingMessage()
        +setName()
        +setUsingMessage()
        +setWeight()
        +setPickable()
        +clone()
        +equals()
    }

    class ClueItem{
        +ClueItem()
        +clone()
        +equals()
    }

    class HiderItem{
        -hiding : boolean
        -hiddenItem : Item

        +HiderItem()
        +isHiding()
        +getHiddenItem()
        +setHiddenItem()
        +setHiding()
        +reveal()
        +clone()
        +equals()
    }

    class ItemContainer{
        -items : Item[]
        -ArrayIndexCount : int
        -locked : boolean
        -lock : LockType
        -ID : int

        +ItemContainer()
        +removeItem()
        +unlock()
        +setUsingMessage()
        +getItem()
        +getItems()
        +getItemsLength()
        +isLocked()
        +getLockType()
        +getID()
        +setLockType()
        +setID()
        +setLocked()
        +setItems()
        +setItemsLength()
        +clone()
        +equals()
    }

    class HidingItem{
        +HidingItem()
        +clone()
        +equals()
    }

    class HealingItem{
        -healingPoints : int

        +HealingItem()
        +clone()
        +equals()
        +getHealingPoints()
        +setHealingPoints()
    }

    class Note {
        +Notes()
        +clone()
        +equals()
    }

    class Key {
        +ID : int

        +Key()
        +clone()
        +equals()
        +getID()
        +setID()
    }

    class Map {
        -rooms : Room[]

        +Map()
        +getRoom()
        +clone()
        +equals()
        +getWall()
        +setWall()
        +getRooms()
        +setRooms()
    }

    class Room {
        -roomNumber : int
        -doors : int
        -name : String
        -NWall : Wall
        -SWall : Wall
        -EWall : Wall
        -WWall : Wall
        -crossableNorth : boolean
        -crossableSouth : boolean
        -crossableEast : boolean
        -crossableWest : boolean
        -Walls : Wall[]

        +Room()
        +loadImages()
        +getName()
        +getRoomNumber()
        +getDoors()
        +addPassageWay()
        +getNWall()
        +getSWall()
        +getEWall()
        +getWWall()
        +setNwall()
        +setSWall()
        +setEWall()
        +setWWall()
        +getCrossableNorth()
        +getCrossableSouth()
        +getCrossableEast()
        +getCrossableWest()
        +clone()
        +equals()
    }
    
    class Character {
        #name : String
        #gender : Gender
        #currentRoom : int

        +Character()
        +getName()
        +getGender()
        +getCurrentRoom()
        +setCurrentRoom()
        +setName()
        +setGender()
        +returnPronoun()
    }

    class Wall
    {
        -wall : BufferedImage
        -hasDoor : boolean
        -combined : BufferedImage
        -items : Item[]
        -getItemsLength : int
        
        +Wall()
        +returnCombinedImage()
        +hasDoor()
        +setDoor()
        +getItem()
        +getItemsLength()
        +setItemsLength()
        +hasItems()
        +setItems()
        +getItems()
        +removeItem()
        +clone()
        +equals()
        -deepCopy()
    }

    class Star {
        -ID : int

        +Star()
        +getID()
        +setID()
        +clone()
        +equals()
    }

    class StarHoles {
        -ID : int
        -filled : boolean

        +starHoles()
        +fill()
        +getID()
        +setID()
        +isFilled()
        +setFilled()
        +clone()
        +equals()
    }

    class GameManager {
        -BUCKET_NAME : String
        -KEY_NAME : String
        -REGION : Region
        -g : Game   
        -configuring : boolean
        -loading : boolean 
        -count : int
        -playerName : String
        -playerGender : String
        -enemyName : String
        -enemyGender : String
        -movesBeforeEnemy : int
        -gameOn: boolean
        -gameWon : boolean
        -gameLost : boolean
        -saved : boolean
        -askingToSave : boolean

        +GameManager()
        +loadConfig()
        +saveProgress()
        +resumeProgress()
        +serialize()
        +deserialize()
        +upload()
        +download()
        +listBucketFilesAsString()
        +getGame()
        +nextMove()
        +isGameWon()
        +isGameLost()
    }

    Player"1" ..|> "1"Gender : has
    LockType"1" <|.. "1"ItemContainer : has
    Map"1" ..o "9" Room : has
    Room"1" ..o "4" Wall :has
    Player"1" ..|> "0...*"Item : uses 
    Wall"1" ..|> "0...*" Item : has
    Player"1" ..|> "1"Direction : has
    Key --|> Item : extends
    HiderItem --|> Item : extends
    ItemContainer --|> Item : extends
    HealingItem --|> Item : extends
    ClueItem --|> Item : extends
    HidingItem --|> Item : extends
    Note --|> Item : extends
    Star --|> Item : extends
    StarHoles --|> Item : extends
    Enemy"1" ..|> "1"Gender : has
    Character <|-- Player : extends
    Character <|-- Enemy : extends
    Player "1" --o "1" Game : uses
    Map "1" --o "1" Game : uses
    Enemy "1" --o "1" Game : uses
    GameMemento "1" --o "1" Game : uses
    GameCaretaker "1" --* "1" GameMemento : uses
    Game "1" ..|> "1" GameCaretaker : uses
    GameManager "1" --o "1" GameFrame : creates
    GameManager "1" o-- "1" Game : manages
    GameFrame "1" <|-- "1" Main : creates

@enduml

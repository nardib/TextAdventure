@startuml DesignClassModel

    class Player {
        -health : int
        -arrayIndexCount : int
        -weightCount : int
        -hidden : boolean
        -inventory : Item[]
        -currentuDirection : Direction

        +Player()
        +decreaseHealth()
        +increaseHealth()
        +getHealth()
        +getInventory()
        +insertItem()
        +removeItem()
        +getItem()
        +getInventoryCount()
        +getWeight()
        +printInventory()
        +crossDoor()
        +changeDirection()
        +getPronoun()
        +getCurrentDirection()
        +isHidden()
        +setHidden()
        +equals()
        +clone()
        -compactedInventory()
    }

    class GameMemento{
        -player : Player
        -map : Map
        -enemy : Enemy
        -isGameOn : boolean

        GameMemento()
        +getPlayer()
        +getMap()
        +getEnemy()
        +getIsGameOn()
    }

    enum Gender {
        MALE
        FEMALE
        NEUTRAL
    }

    enum Direction {
        NORTH
        SOUTH
        EAST
        WEST
    }

    enum LockType {
        KEY
        COMBINATION
        NONE
    }

    class Enemy{
        +move()
        +Enemy()
        +equals()
        +clone()
        -generateStartingPoint()
    }

    class GameFrame {
        -game : Game
        -wallcount : int
        -images : Image[]
        -isFullscreen : boolean
        - gd : GraphicsDevice
        -frame : JFrame
        -terminal : JTextPane
        inputField : JTextField
        buttonPanel : JPanel
        gameStatusLabel : JLabel
        playerHealthLabel : JLabel
        +GameFrame()
        -updatePlayerHealthLabel()
        -toggleFullscreen()
        -writeToTerminal()
        -clearTerminal()
    }

    class Game {
        -player : Player
        -map : Map
        -enemy : Enemy
        -enemycount: int
        -count : int
        -isGameOn : boolean
        -mementos : Stack

        +Game()
        +nextMove()
        +isGameOver()
        +isGameOn()
        +getPlayer()
        +getMap()
        +getEnemy()
        +undo()
        -saveCurrentState()
        -playerTurn()
        -enemyTurn()
        -capitalizeFirstLetter()
        -getItemsInWall()
    }

    class Main {
        +main()
    }

    class Item{
        #name : String
        #icon : ImageIcon
        #WEIGHT : int
        #PICKABLE : boolean
        #currentRoom : int
        #usingMessage : String

        +Item()
        +getIcon()
        +getRoom()
        +getName()
        +getUsingMessage()
        +setRoom()
        -setName()
    }

    class ClueItem{
        +ClueItem()
    }

    class HiderItem{
        -hiding : boolean
        -hiddenItem : Item

        +HiderItem()
        +isHiding()
        +reveal()
    }

    class ItemContainer{
        -items : Item[]
        -arrayIndexCount : int
        -locked : boolean
        -lockType : LockType
        -ID : int

        +ItemContainer()
        +removeItem()
        +unlock()
        +setUsingMessage()
        +getItem()
        +getItemsLength()
        +isLocked()
        +getLockType()
        +getID()
    }

    class CustomOutputStream{
        -textPane : JTextPane
        
        +CustomOutputStream()
        +write()
    }

    class HidingItem{
        +HidingItem()
    }

    class HealingItem{
        +HEALING_POINTS : int

        +HealingItem()
    }

    class Note {
        -message : String

        +Notes()
    }

    class Key {
        +ID : int

        +Key()
    }

    class Map {
        -DoorWall : Wall[]
        -PlainWall : Wall[]
        -rooms : Room[]

        +Map()
        +getRoom()
    }

    class Room {
        -roomNumber : int
        -doors : int
        -name : String
        -NWall : Wall
        -SWall : Wall
        -EWall : Wall
        -WWall : Wall
        -crossableNorth : boolean
        -crossableSouth : boolean
        -crossableEast : boolean
        -crossableWest : boolean
        -Walls : Wall[]

        +Room()
        +loadImages()
        +getName()
        +getRoomNumber()
        +getDoors()
        +addPassageWay()
        +getNWall()
        +getSWall()
        +getEWall()
        +getWWall()
        +setNwall()
        +setSWall()
        +setEWall()
        +setWWall()
        +getCrossableNorth()
        +getCrossableSouth()
        +getCrossableEast()
        +getCrossableWest()
    }
    
    class Character {
        #name : String
        #gender : Gender
        #currentRoom : int

        +Character()
        +getName()
        +getGender()
        +getCurrentRoom()
        +setCurrentRoom()
        +setName()
        +setGender()
    }

    class Wall
    {
        -wall : BufferedImage
        -hasDoor : boolean
        -itemsImages : HashMap
        -combined : BufferedImage
        -items : Item[]
        -lastItem : int
        
        +Wall()
        +addItemImages()
        +hasDoor()
        +removeItemImage()
        +getCombinedImage()
        +setDoor()
        +getItem()
        +getItemsLength()
        +hasItems()
        +setItems()
        +removeItem()
        -deepCopy()
        -drawItems()
    }

    Player ..|> Gender
    LockType ..|> ItemContainer
    Map ..o Room
    Room ..o Wall
    Player ..|> Item
    Wall ..|> Item
    Player ..|> Direction
    Key --|> Item
    HiderItem --|> Item
    ItemContainer --|> Item
    HealingItem --|> Item
    ClueItem --|> Item
    HidingItem --|> Item
    Note --|> Item
    Enemy ..|> Gender
    Character <|-- Player
    Character <|-- Enemy
    Player --o Game
    Map --o Game
    Enemy --o Game
    GameMemento --* Game
    Game --o GameFrame
    GameFrame <|-- Main
    CustomOutputStream --* GameFrame

@enduml

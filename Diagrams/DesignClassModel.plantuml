@startuml DesignClassModel

    class Player {
        -name : String
        -gender : Gender
        -health : int
        -score : int
        -arrayIndexCount : int
        -weightCount : int
        -inventory : Item[]
        -currentuDirection : Direction
        +Player()
        +getName()
        +setName()
        +getGender()
        +setGender()
        +decreaseHealth()
        +increaseHealth()
        +getHealth()
        +getInventory()
        +insertItem()
        +removeItem()
        +crossDoor()
        +changeDirection()
    }

    enum Gender {
        MALE
        FEMALE
        NEUTRAL
    }
    enum Direction {
        NORTH
        SOUTH
        EAST
        WEST
    }
    class Enemy{
        -name : String
        -gender : Gender
        -currentRoom : Room
        -damage : int
        -presence : boolean
        -available : boolean[];
    }
    class GameFrame {
        x : int
        y : int
        +GameFrame()
    }
    class Game
    class Main {
        +main()
    }
    class Item{
        #icon : ImageIcon
        #weight : int
        +getIcon()
        +getWeight()
    }
    class Key {
        +Key()
    }
    class Map {
        MapSize : int
        passageWays : int[]
        roomNames : String[]
        roomDoors : int[]
        rooms : Room[]
        +Map()

    }
    class Room {
        -roomNumber : int
        -name : String
        -NWall :BufferedImage
        -SWall :BufferedImage
        -EWall :BufferedImage
        -WWall :BufferedImage
        crossableNorth : boolean
        crossableSouth : boolean
        crossableEast : boolean
        crossableWest : boolean
        +Room()
        +getName()
        +getRoomNumber()
        +addPassageWay()
        +getNWall()
        +getSWall()
        +getEWall()
        +getWWall()
        +setNwall()
        +setSWall()
        +setEWall()
        +setWWall()
    }

    Player ..|> Gender
    Map ..|> Room
    Player ..|> Item
    Player ..|> Direction
    Key --|> Item
    Enemy ..|> Gender


@enduml
